==================
Simple operation
==================

result + 0x123;

---

(source_file
  (statement
    (binary_expression
      (identifier)
      (number))))

==================
Simple operation with comment
==================

result + 0x123;

---

(source_file
  (statement
    (binary_expression
      (identifier)
      (number))))


==================
Simple number 
==================

0x123;

---

(source_file
  (statement
    (number)))

==================
Simple assignment 
==================

result = 0x123;

---

(source_file
  (statement
    (assignment
      (identifier)
      (number))))

==================
Operator chaining
==================

1 + 2 + 3;

---

(source_file
  (statement
    (binary_expression
      (binary_expression
          (number)
          (number))
      (number))))

==================
Function call
==================

print(1,2,'test');

---

(source_file
  (statement
    (call
      (identifier)
      (arguments
        (number)
        (number)
        (string)))))

==================
Complex expression
==================

rEsult = 0x123 / ( 2 + 123 ) + 23 * asd * ( 2 - 4 );

---

(source_file
  (statement
    (assignment
      (identifier)
      (binary_expression
        (binary_expression
          (number)
          (binary_expression
            (number)
            (number)))
        (binary_expression
          (binary_expression
            (number)
            (identifier))
          (binary_expression
            (number)
            (number)))))))

==================
While loop
==================

while ( asd != 5 ) { asd = asd + 1; };

---

(source_file
  (statement
    (while
      (binary_expression
        (identifier)
        (number))
      (block
        (statement
          (assignment
            (identifier)
            (binary_expression
              (identifier)
              (number))))))))

==================
Function definition
==================

fn test(asd, qwe) { asd + qwe };

---

(source_file
  (statement
    (function
      (name)
      (params
        (param)
        (param))
      (block
        (statement
          (binary_expression
            (identifier)
            (identifier)))))))


==================
If definition
==================

if( a == 5 ) { 7 } else { 9 };

---

(source_file
  (statement
    (choice
      (binary_expression
        (identifier)
        (number))
      (block
        (statement
          (number)))
      (block
        (statement
          (number))))))


